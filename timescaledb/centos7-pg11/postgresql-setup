#!/bin/sh
PGVERSION=11.7

PGENGINE=/usr/pgsql-11/bin

SERVICE_NAME="$2"
if [ x"$SERVICE_NAME" = x ]; then
    SERVICE_NAME=postgresql
fi

PGDATA="/var/lib/pgsql/11/data"
PGPORT="5432"
PGLOG=/var/lib/pgsql/11/initdb.log

export PGDATA
export PGPORT

# For SELinux we need to use 'runuser' not 'su'
if [ -x /sbin/runuser ]; then
    SU=runuser
else
    SU=su
fi

script_result=0

# code shared between initdb and upgrade actions
perform_initdb(){
    if [ ! -e "$PGDATA" ]; then
        mkdir "$PGDATA" || return 1
        chown postgres:postgres "$PGDATA"
        chmod go-rwx "$PGDATA"
    fi
    # Clean up SELinux tagging for PGDATA
    [ -x /sbin/restorecon ] && /sbin/restorecon "$PGDATA"

    # Create the initdb log file if needed
    if [ ! -e "$PGLOG" -a ! -h "$PGLOG" ]; then
        touch "$PGLOG" || return 1
        chown postgres:postgres "$PGLOG"
        chmod go-rwx "$PGLOG"
        [ -x /sbin/restorecon ] && /sbin/restorecon "$PGLOG"
    fi

    # Initialize the database
    $SU -l postgres -c "$PGENGINE/initdb --pgdata='$PGDATA' --auth='ident'" \
                    >> "$PGLOG" 2>&1 < /dev/null

    # Create directory for postmaster log files
    mkdir "$PGDATA/pg_log"
    chown postgres:postgres "$PGDATA/pg_log"
    chmod go-rwx "$PGDATA/pg_log"
    [ -x /sbin/restorecon ] && /sbin/restorecon "$PGDATA/pg_log"

    # add timescaledb as preload libraries
    echo "shared_preload_libraries = 'timescaledb'" >> $PGDATA/postgresql.conf
    
    # postgres and timescaledb-tune are started by supervisord with conf file

    if [ -f "$PGDATA/PG_VERSION" ]; then
        return 0
    fi
    return 1
}

initdb(){
    if [ -f "$PGDATA/PG_VERSION" ]; then
        echo $"Data directory is not empty!"
        echo
        script_result=1
    else
        echo -n $"Initializing database ... "
        if perform_initdb; then
            echo $"OK"
        else
            echo $"failed, see $PGLOG"
            cat $PGLOG
            script_result=1
        fi
        echo
    fi
}

# See how we were called.
case "$1" in
    initdb)
        initdb
        ;;
    *)
        echo $"Usage: $0 {initdb} [ service_name ]"
        exit 2
esac

exit $script_result
